import { NextRequest, NextResponse } from "next/server";
import { GoogleGenerativeAI } from "@google/generative-ai";

// Ensure the API key is correctly configured in the environment
if (!process.env.API_KEY) {
  console.error("API_KEY is not defined in the environment variables");
}

const genAI = new GoogleGenerativeAI(process.env.API_KEY);
const generationConfig = {
  stopSequences: ["red"],
  maxOutputTokens: 500,
  temperature: 0.7,
  topP: 0.6,
  topK: 16,
};

const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

export async function POST(request) {
  try {
    const body = await request.json();

    console.log("Received body:", body);

    // Check if the messages array is provided and is in the correct format
    if (!body.messages || !Array.isArray(body.messages) || body.messages.length === 0) {
      return NextResponse.json({ error: 'Invalid input: messages array is required.' }, { status: 400 });
    }

    const { messages } = body;
    const prompt = messages[messages.length - 1].content;

    console.log("Sending prompt to AI model:", prompt);

    const result = await model.generateContent(prompt, generationConfig);

    console.log("AI model response:", result);

    if (!result || !result.response || !result.response.text) {
      return NextResponse.json({ error: 'No content generated by the model.' }, { status: 500 });
    }

    return NextResponse.json({ text: result.response.text }, { status: 200 });
  } catch (error) {
    console.error('Error in API:', error.message);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
}
